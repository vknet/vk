// Autogenerated at 02/09/2017 13:51:38
// DO NOT EDIT THIS FILE CAUSE ALL CHANGES WILL BE DELETED AUTOMATICALLY
using VkNet.Enums.SafetyEnums;

namespace VkNet.Utils
{
	public partial class VkResponse
	{
		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="AppFilter"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator AppFilter(VkResponse response)
		{
			return response == null ? null : AppFilter.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="AppPlatforms"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator AppPlatforms(VkResponse response)
		{
			return response == null ? null : AppPlatforms.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="AppRatingType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator AppRatingType(VkResponse response)
		{
			return response == null ? null : AppRatingType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="AppRequestType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator AppRequestType(VkResponse response)
		{
			return response == null ? null : AppRequestType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="AppSort"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator AppSort(VkResponse response)
		{
			return response == null ? null : AppSort.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="ChangeNameStatus"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator ChangeNameStatus(VkResponse response)
		{
			return response == null ? null : ChangeNameStatus.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="CommentObjectType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator CommentObjectType(VkResponse response)
		{
			return response == null ? null : CommentObjectType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="CommentsSort"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator CommentsSort(VkResponse response)
		{
			return response == null ? null : CommentsSort.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="Deactivated"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Deactivated(VkResponse response)
		{
			return response == null ? null : Deactivated.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="Display"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Display(VkResponse response)
		{
			return response == null ? null : Display.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="FeedType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator FeedType(VkResponse response)
		{
			return response == null ? null : FeedType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="FriendsFilter"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator FriendsFilter(VkResponse response)
		{
			return response == null ? null : FriendsFilter.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="FriendsOrder"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator FriendsOrder(VkResponse response)
		{
			return response == null ? null : FriendsOrder.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="GroupsSort"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator GroupsSort(VkResponse response)
		{
			return response == null ? null : GroupsSort.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="GroupType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator GroupType(VkResponse response)
		{
			return response == null ? null : GroupType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="LikeObjectType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator LikeObjectType(VkResponse response)
		{
			return response == null ? null : LikeObjectType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="LikesFilter"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator LikesFilter(VkResponse response)
		{
			return response == null ? null : LikesFilter.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="LinkAccessType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator LinkAccessType(VkResponse response)
		{
			return response == null ? null : LinkAccessType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="MediaType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator MediaType(VkResponse response)
		{
			return response == null ? null : MediaType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="NameCase"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator NameCase(VkResponse response)
		{
			return response == null ? null : NameCase.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="NewsObjectTypes"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator NewsObjectTypes(VkResponse response)
		{
			return response == null ? null : NewsObjectTypes.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="NewsTypes"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator NewsTypes(VkResponse response)
		{
			return response == null ? null : NewsTypes.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="OccupationType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator OccupationType(VkResponse response)
		{
			return response == null ? null : OccupationType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PhotoAlbumType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PhotoAlbumType(VkResponse response)
		{
			return response == null ? null : PhotoAlbumType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PhotoFeedType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PhotoFeedType(VkResponse response)
		{
			return response == null ? null : PhotoFeedType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PhotoSearchRadius"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PhotoSearchRadius(VkResponse response)
		{
			return response == null ? null : PhotoSearchRadius.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PhotoSizeType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PhotoSizeType(VkResponse response)
		{
			return response == null ? null : PhotoSizeType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="Platform"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Platform(VkResponse response)
		{
			return response == null ? null : Platform.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PostSourceType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PostSourceType(VkResponse response)
		{
			return response == null ? null : PostSourceType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PostType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PostType(VkResponse response)
		{
			return response == null ? null : PostType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="PostTypeOrder"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator PostTypeOrder(VkResponse response)
		{
			return response == null ? null : PostTypeOrder.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="Privacy"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Privacy(VkResponse response)
		{
			return response == null ? null : Privacy.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="RelativeType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator RelativeType(VkResponse response)
		{
			return response == null ? null : RelativeType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="ReportType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator ReportType(VkResponse response)
		{
			return response == null ? null : ReportType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="Services"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Services(VkResponse response)
		{
			return response == null ? null : Services.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="UserSection"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator UserSection(VkResponse response)
		{
			return response == null ? null : UserSection.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="VideoCatalogItemType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator VideoCatalogItemType(VkResponse response)
		{
			return response == null ? null : VideoCatalogItemType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="VideoCatalogType"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator VideoCatalogType(VkResponse response)
		{
			return response == null ? null : VideoCatalogType.FromJson(response);
		}

		/// <summary>
        /// Преобразовать из <see cref="VkResponse"/> в <see cref="WallFilter"/>.
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator WallFilter(VkResponse response)
		{
			return response == null ? null : WallFilter.FromJson(response);
		}

	}
}